{"version":3,"sources":["util.js","components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","serviceWorker.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","audio","catch","error","console","log","Player","setIsPlaying","songInfo","setSongInfo","currentSong","songs","setCurrentSong","setSongs","getTime","time","Math","floor","slice","useEffect","newSongs","map","song","id","active","skipTrackHandler","direction","currentIndex","findIndex","length","className","currentTime","value","type","max","duration","min","onChange","e","target","style","background","color","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","selectedSong","filter","state","Library","libraryStatus","key","Nav","setLibraryStatus","faMusic","chillHop","uuidv4","App","useRef","useState","chillhop","timeUpdateHandler","onLoadedMetadata","onTimeUpdate","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.df6bc123.chunk.js","sourcesContent":["export const playAudio = (isPlaying, audioRef) => {\n  if (isPlaying) {\n    const playPromise = audioRef.current.play();\n    if (playPromise !== undefined) {\n      playPromise\n        .then((audio) => {\n          audioRef.current.play();\n        })\n        .catch((error) => console.log(error));\n    }\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { playAudio } from \"../util\";\n\nconst Player = ({\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  currentSong,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  //UseEffect Update List\n  useEffect(() => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n  //Event Handlers\n  function getTime(time) {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  }\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n  const skipTrackHandler = (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    //Forward BAck\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n    if (direction === \"skip-back\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        setCurrentSong(songs[songs.length - 1]);\n        playAudio(isPlaying, audioRef);\n        return;\n      }\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n    playAudio(isPlaying, audioRef);\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          value={songInfo.currentTime}\n          type=\"range\"\n          max={songInfo.duration || 0}\n          min={0}\n          onChange={dragHandler}\n          style={{\n            background: `linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]} )`,\n          }}\n        />\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt=\"\" />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\nimport { playAudio } from \"../util\";\n\nconst LibrarySong = ({\n  name,\n  artist,\n  cover,\n  id,\n  setCurrentSong,\n  songs,\n  audioRef,\n  isPlaying,\n  setSongs,\n  active,\n}) => {\n  const songSelectHandler = () => {\n    const selectedSong = songs.filter((state) => state.id === id);\n    setCurrentSong({ ...selectedSong[0] });\n    //Set Active in library\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    //Play audio\n    playAudio(isPlaying, audioRef);\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${active ? \"selected\" : \"\"}`}\n    >\n      <img src={cover} alt=\"\" />\n      <div className=\"song-description\">\n        <h3>{name}</h3>\n        <h4>{artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\n\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \" \"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            cover={song.cover}\n            name={song.name}\n            artist={song.artist}\n            active={song.active}\n            key={song.id}\n            id={song.id}\n            setCurrentSong={setCurrentSong}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\n  const openLibraryHandler = () => {\n    setLibraryStatus(!libraryStatus);\n  };\n\n  return (\n    <nav>\n      <h1>Waves</h1>\n      <button\n        className={libraryStatus ? \"library-active\" : \"\"}\n        onClick={openLibraryHandler}\n      >\n        Library\n        <FontAwesomeIcon icon={faMusic}></FontAwesomeIcon>\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n  ];\n}\n\nexport default chillHop;\n","import React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n//Import Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import data\nimport chillhop from \"./data\";\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n\n  const [songs, setSongs] = useState(chillhop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, currentTime: current, duration: duration });\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}